-- Loadstring support: skip loading screen if already executed
if game.CoreGui:FindFirstChild("PetPredictor") then return end

-- Create loading screen
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")

local loadingGui = Instance.new("ScreenGui", CoreGui)
loadingGui.Name = "LoadingScreen"
loadingGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local loadingFrame = Instance.new("Frame", loadingGui)
loadingFrame.Size = UDim2.new(0, 400, 0, 100)
loadingFrame.Position = UDim2.new(0.5, -200, 0.5, -50)
loadingFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
loadingFrame.BorderSizePixel = 0
Instance.new("UICorner", loadingFrame).CornerRadius = UDim.new(0, 8)

local loadingText = Instance.new("TextLabel", loadingFrame)
loadingText.Size = UDim2.new(1, 0, 0.5, 0)
loadingText.Position = UDim2.new(0, 0, 0, 0)
loadingText.BackgroundTransparency = 1
loadingText.TextColor3 = Color3.fromRGB(255, 255, 255)
loadingText.Text = "Initializing..."
loadingText.Font = Enum.Font.GothamBold
loadingText.TextSize = 18

local progressBar = Instance.new("Frame", loadingFrame)
progressBar.Size = UDim2.new(0, 0, 0.25, 0)
progressBar.Position = UDim2.new(0, 0, 0.7, 0)
progressBar.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
Instance.new("UICorner", progressBar).CornerRadius = UDim.new(0, 6)

local fill = Instance.new("Frame", progressBar)
fill.Size = UDim2.new(0, 0, 1, 0)
fill.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
fill.BorderSizePixel = 0
fill.Name = "Fill"
Instance.new("UICorner", fill).CornerRadius = UDim.new(0, 6)

-- Simulate loading
local loadingSteps = {
    "Finding eggs...",
    "Loading prediction models...",
    "Preparing GUI...",
    "Finalizing setup..."
}

coroutine.wrap(function()
    for i, step in ipairs(loadingSteps) do
        loadingText.Text = step
        TweenService:Create(fill, TweenInfo.new(0.4), {Size = UDim2.new(i/#loadingSteps, 0, 1, 0)}):Play()
        wait(0.6 + math.random())
    end
    wait(0.5)
    loadingGui:Destroy()
end)()

-- Delay until loading screen ends
wait(4)

-- Real Script Begins
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Workspace = game:GetService("Workspace")

-- Egg Data
local eggPets = {
    ["Common Egg"] = {
        {name = "Dog", chance = 33, color = Color3.fromRGB(200, 200, 200)},
        {name = "Bunny", chance = 33, color = Color3.fromRGB(200, 200, 200)},
        {name = "Golden Lab", chance = 34, color = Color3.fromRGB(255, 215, 0)}
    },
    ["Uncommon Egg"] = {
        {name = "Cat", chance = 25, color = Color3.fromRGB(200, 200, 200)},
        {name = "Chicken", chance = 25, color = Color3.fromRGB(200, 200, 200)},
        {name = "Deer", chance = 25, color = Color3.fromRGB(200, 200, 200)},
        {name = "Black Bunny", chance = 25, color = Color3.fromRGB(100, 100, 100)}
    },
    ["Rare Egg"] = {
        {name = "Orange Tabby", chance = 33, color = Color3.fromRGB(255, 165, 0)},
        {name = "Spotted Deer", chance = 25, color = Color3.fromRGB(200, 200, 200)},
        {name = "Pig", chance = 16.7, color = Color3.fromRGB(255, 182, 193)},
        {name = "Rooster", chance = 16.7, color = Color3.fromRGB(255, 0, 0)},
        {name = "Monkey", chance = 8.3, color = Color3.fromRGB(139, 69, 19)}
    },
    ["Legendary Egg"] = {
        {name = "Cow", chance = 42.6, color = Color3.fromRGB(255, 255, 255)},
        {name = "Silver Monkey", chance = 42.6, color = Color3.fromRGB(192, 192, 192)},
        {name = "Sea Otter", chance = 10.6, color = Color3.fromRGB(135, 206, 250)},
        {name = "Turtle", chance = 2.1, color = Color3.fromRGB(0, 128, 0)},
        {name = "Polar Bear", chance = 2.1, color = Color3.fromRGB(255, 255, 255)}
    },
    ["Mythical Egg"] = {
        {name = "Grey Mouse", chance = 35.7, color = Color3.fromRGB(190, 190, 190)},
        {name = "Brown Mouse", chance = 26.8, color = Color3.fromRGB(139, 69, 19)},
        {name = "Squirrel", chance = 26.8, color = Color3.fromRGB(160, 82, 45)},
        {name = "Red Giant Ant", chance = 8.9, color = Color3.fromRGB(255, 0, 0)},
        {name = "Red Fox", chance = 1.8, color = Color3.fromRGB(255, 69, 0)}
    },
    ["Bug Egg"] = {
        {name = "Snail", chance = 40, color = Color3.fromRGB(153, 101, 21)},
        {name = "Giant Ant", chance = 30, color = Color3.fromRGB(255, 0, 0)},
        {name = "Caterpillar", chance = 25, color = Color3.fromRGB(50, 205, 50)},
        {name = "Praying Mantis", chance = 4, color = Color3.fromRGB(0, 128, 0)},
        {name = "Dragonfly", chance = 1, color = Color3.fromRGB(0, 191, 255)}
    },
    ["Dinosaur Egg"] = {
        {name = "Raptor", chance = 35, color = Color3.fromRGB(200, 200, 200)},
        {name = "Triceratops", chance = 32.5, color = Color3.fromRGB(120, 255, 120)},
        {name = "Stegosaurus", chance = 28, color = Color3.fromRGB(120, 120, 255)},
        {name = "Pterodactyl", chance = 3, color = Color3.fromRGB(255, 200, 0)},
        {name = "Brontosaurus", chance = 1, color = Color3.fromRGB(255, 105, 180)},
        {name = "T-Rex", chance = 0.5, color = Color3.fromRGB(255, 0, 0)}
    },
    ["Anti Bee Egg"] = {
        {name = "Wasp", chance = 55, color = Color3.fromRGB(200, 200, 200)},
        {name = "Tarantula Hawk", chance = 30, color = Color3.fromRGB(255, 80, 80)},
        {name = "Moth", chance = 13.75, color = Color3.fromRGB(180, 180, 255)},
        {name = "Butterfly", chance = 1, color = Color3.fromRGB(255, 105, 180)},
        {name = "Disco Bee", chance = 0.25, color = Color3.fromRGB(255, 0, 255)}
    }
}

-- Weighted Picker
local function pickWeightedPet(petList)
    local total = 0
    for _, p in pairs(petList) do total += p.chance end
    local rand = math.random() * total
    local sum = 0
    for _, p in ipairs(petList) do
        sum += p.chance
        if rand <= sum then return p end
    end
    return petList[#petList]
end

-- GUI
local gui = Instance.new("ScreenGui", CoreGui)
gui.Name = "PetPredictor"

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 260, 0, 180)
frame.Position = UDim2.new(0.5, -130, 0.5, -90)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.Active, frame.Draggable = true, true
Instance.new("UICorner", frame)

local title = Instance.new("TextLabel", frame)
title.Text = "Pet Predictor"
title.Size = UDim2.new(1, 0, 0, 30)
title.BackgroundTransparency = 1
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.GothamBold
title.TextSize = 18

local eggButton = Instance.new("TextButton", frame)
eggButton.Position = UDim2.new(0.1, 0, 0.25, 0)
eggButton.Size = UDim2.new(0.8, 0, 0, 30)
eggButton.Text = "Select Nearest Egg"
eggButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
eggButton.TextColor3 = Color3.new(1, 1, 1)
eggButton.Font = Enum.Font.Gotham
eggButton.TextSize = 14
Instance.new("UICorner", eggButton)

local predictButton = Instance.new("TextButton", frame)
predictButton.Position = UDim2.new(0.1, 0, 0.5, 0)
predictButton.Size = UDim2.new(0.8, 0, 0, 30)
predictButton.Text = "Predict Pet"
predictButton.BackgroundColor3 = Color3.fromRGB(90, 200, 90)
predictButton.TextColor3 = Color3.fromRGB(0, 0, 0)
predictButton.Font = Enum.Font.GothamBold
predictButton.TextSize = 14
Instance.new("UICorner", predictButton)

local autoRestart = Instance.new("TextButton", frame)
autoRestart.Position = UDim2.new(0.1, 0, 0.72, 0)
autoRestart.Size = UDim2.new(0.8, 0, 0, 30)
autoRestart.Text = "Auto-Restart: OFF"
autoRestart.BackgroundColor3 = Color3.fromRGB(75, 75, 75)
autoRestart.TextColor3 = Color3.fromRGB(255, 255, 255)
autoRestart.Font = Enum.Font.Gotham
autoRestart.TextSize = 13
Instance.new("UICorner", autoRestart)

-- Prediction Logic
local selectedEgg, running, auto = nil, false, false
local timerLabel = nil

local function getNearestEgg()
    local min = math.huge
    local nearest
    for _, model in pairs(Workspace:GetDescendants()) do
        if model:IsA("Model") and model:FindFirstChildWhichIsA("BasePart") and string.find(model.Name:lower(), "egg") then
            local part = model:FindFirstChildWhichIsA("BasePart")
            local dist = (LocalPlayer.Character.HumanoidRootPart.Position - part.Position).Magnitude
            if dist < min then min = dist; nearest = model end
        end
    end
    return nearest
end

local function showPrediction(pet)
    local base = selectedEgg and selectedEgg:FindFirstChildWhichIsA("BasePart")
    if not base then return end
    if selectedEgg:FindFirstChild("PredictionGui") then selectedEgg.PredictionGui:Destroy() end

    local gui = Instance.new("BillboardGui", selectedEgg)
    gui.Name = "PredictionGui"
    gui.Adornee = base
    gui.Size = UDim2.new(0, 200, 0, 50)
    gui.StudsOffset = Vector3.new(0, 4, 0)
    gui.AlwaysOnTop = true

    local name = Instance.new("TextLabel", gui)
    name.Size = UDim2.new(1, 0, 0.5, 0)
    name.BackgroundTransparency = 1
    name.Text = pet.name
    name.TextColor3 = pet.color
    name.Font = Enum.Font.GothamBold
    name.TextScaled = true

    timerLabel = Instance.new("TextLabel", gui)
    timerLabel.Position = UDim2.new(0, 0, 0.5, 0)
    timerLabel.Size = UDim2.new(1, 0, 0.5, 0)
    timerLabel.BackgroundTransparency = 1
    timerLabel.Text = "30s"
    timerLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    timerLabel.Font = Enum.Font.Gotham
    timerLabel.TextScaled = true
end

eggButton.MouseButton1Click:Connect(function()
    selectedEgg = getNearestEgg()
    eggButton.Text = selectedEgg and ("Egg: " .. selectedEgg.Name) or "No Egg Found"
end)

autoRestart.MouseButton1Click:Connect(function()
    auto = not auto
    autoRestart.Text = "Auto-Restart: " .. (auto and "ON" or "OFF")
end)

predictButton.MouseButton1Click:Connect(function()
    if running or not selectedEgg then
        predictButton.Text = "Select Egg First"
        wait(1)
        predictButton.Text = "Predict Pet"
        return
    end

    local petList = eggPets[selectedEgg.Name]
    if not petList then
        predictButton.Text = "Egg Not Supported"
        wait(1)
        predictButton.Text = "Predict Pet"
        return
    end

    running = true
    predictButton.Text = "Predicting..."

    coroutine.wrap(function()
        repeat
            local pet = pickWeightedPet(petList)
            showPrediction(pet)
            for i = 30, 1, -1 do
                if timerLabel then timerLabel.Text = i .. "s" end
                wait(1)
            end
        until not auto
        running = false
        predictButton.Text = "Predict Pet"
    end)()
end)
